import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { RouterOutputs, api } from "~/utils/api";
import { SignIn, SignInButton, useUser, SignOutButton } from "@clerk/nextjs";
import dayjs from "dayjs";
import Image from "next/image";

var relativeTime = require('dayjs/plugin/relativeTime')
dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const user = useUser();
  
  if (!user) return null;
  return (
    <div className="flex gap-4 w-full">
      <Image src={user.user?.profileImageUrl} alt="Profile Pic" className="w-14 h-14 rounded-full" width={56} height={56}/>
      <input placeholder="Type some emojis..." className="bg-transparent grow outline-none"/>
    </div>
  )
}

type PostWithUser = RouterOutputs["post"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  return (
    <div key={props.post.id} className="flex border-b p-4">
      <div className="flex gap-4 w-full items-center">
        <Image src={props.author?.profileImageUrl} alt="Author Pic" className="w-14 h-14 rounded-full" width={56} height={56}/>
        <div className="flex flex-col">
          <div>
            <span className="font-thin text-slate-400 cursor-pointer">{`@${props.author?.username}`}</span>
            <span className="text-slate-100">{` Â· ${dayjs(props.post.createdAt).fromNow()}`}</span>
          </div>
          <span>{props.post.content}</span>
        </div>
      </div>
    </div>
  )
}

const Home: NextPage = () => {

  const user = useUser();

  const { data, isFetching } = api.post.getAll.useQuery();
  if (isFetching) return <span>LOADING!!</span>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full md:max-w-2xl border-x border-slate-400">
        <div className="flex border-b p-4">
          {!user.isSignedIn && <SignInButton />}
          {/* {user.isSignedIn && <><SignOutButton/><CreatePostWizard/></>} */}
          {user.isSignedIn && <CreatePostWizard/>}
        </div>
        <div>
          {data?.map(({post, author}) => (
            <PostView  author={author} post={post} key={post.id}/>
          ))}
        </div>
        </div>
      </main>
    </>
  );
};

export default Home;
